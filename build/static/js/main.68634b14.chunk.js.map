{"version":3,"sources":["components/Persons.js","components/PersonForm.js","components/Filter.js","components/Notification.js","services/persons.js","App.js","index.js"],"names":["Person","person","deletePerson","name","number","onClick","Persons","persons","map","PersonForm","addPerson","handleNameChange","handleNumberChange","newName","newNumber","onSubmit","value","onChange","type","Filter","searchName","handleSearchChange","Notification","notification","className","message","baseUrl","axios","get","then","response","data","newObject","post","id","put","delete","App","useState","setPersons","setNewName","setNewNumber","setSearchName","setNotification","useEffect","personService","initialPersons","createPerson","returnedPerson","showNotification","concat","updatePerson","existingPerson","window","confirm","changedPerson","catch","error","filter","p","setTimeout","event","target","preventDefault","find","undefined","toLowerCase","includes","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.68634b14.chunk.js","sourcesContent":["import React from 'react'\n\nconst Persons = ({ persons, deletePerson }) => {\n  return (\n    <div>\n      {persons.map(person =>\n        <Person key={person.name} person={person} deletePerson={deletePerson}/>\n      )}\n    </div>\n  )\n}\n    \nconst Person = ({ person, deletePerson }) => {\n  return (\n    <div>\n      {person.name} {person.number} <button onClick={() => deletePerson(person)}>delete</button>\n    </div>\n  )\n}\n\nexport default Persons;","import React from 'react'\n\nconst PersonForm = ({ addPerson, handleNameChange, handleNumberChange, newName, newNumber }) => {\n  return (\n    <form onSubmit={addPerson}>\n      <div>\n      name: <input value={newName} onChange={handleNameChange}/>\n      </div>\n      <div>\n      number: <input value={newNumber} onChange={handleNumberChange}/>\n      </div>\n      <div>\n      <button type=\"submit\">add</button>\n      </div>\n    </form>\n  )\n}\n\nexport default PersonForm;","import React from 'react'\n\nconst Filter = ({ searchName, handleSearchChange }) => {\n  return (\n    <span>filter shown with: <input value={searchName} onChange={handleSearchChange}/></span>\n  )\n}\n  \nexport default Filter;","import React from 'react'\n\nconst Notification = ({ notification }) => {\n  if (notification === null) {\n    return null\n  }\n\n  return (\n    <div className={notification.type}>\n      {notification.message}\n    </div>\n  )\n}\n\nexport default Notification;","import axios from 'axios';\nconst baseUrl = '/api/persons';\n\nconst getAll = () => {\n  const request = axios.get(baseUrl)\n  return request.then(response => response.data)\n}\n\nconst create = newObject => {\n  const request = axios.post(baseUrl, newObject)\n  return request.then(response => response.data)\n}\n\nconst update = (id, newObject) => {\n  const request = axios.put(`${baseUrl}/${id}`, newObject)\n  return request.then(response => response.data)\n}\n\nconst deleteOne = (id) => {\n  const request = axios.delete(`${baseUrl}/${id}`)\n  return request.then(response => response.data)\n}\n\nexport default { getAll, create, update, deleteOne };\n","import React, { useState, useEffect } from 'react';\nimport Persons from './components/Persons';\nimport PersonForm from './components/PersonForm';\nimport Filter from './components/Filter';\nimport Notification from './components/Notification';\n\nimport personService from './services/persons';\n\nconst App = () => {\n  const [ persons, setPersons] = useState([]);\n  const [ newName, setNewName ] = useState('');\n  const [ newNumber, setNewNumber ] = useState('');\n  const [ searchName, setSearchName ] = useState('');\n  const [ notification, setNotification ] = useState(null);\n\n  const hook = () => {\n    personService\n      .getAll()\n      .then(initialPersons => {\n        setPersons(initialPersons)\n      });\n  }\n  \n  useEffect(hook, [])\n\n  const addPerson = (event) => {\n    event.preventDefault();\n\n    const existingPerson = persons.find(person => person.name === newName);\n\n    if (existingPerson !== undefined) {\n      updatePerson(existingPerson);\n    } else {\n      createPerson();\n    }\n  }\n\n  const createPerson = () => {\n    const personObject = {\n      name: newName,\n      number: newNumber,\n    }\n    personService\n      .create(personObject)\n      .then(returnedPerson => {\n        showNotification({\n          message: `Added ${returnedPerson.name}`,\n          type: 'success'\n        });\n        setPersons(persons.concat(returnedPerson));\n      });\n  }\n\n  const updatePerson = (existingPerson) => {\n    if (window.confirm(`${newName} is already added to phonebook, replace the old number with a new one?`)) {\n      const changedPerson = { ...existingPerson, number: newNumber }\n      personService\n        .update(changedPerson.id, changedPerson)\n        .then(returnedPerson => {\n          showNotification({\n            message: `Updated ${returnedPerson.name}`,\n            type: 'success'\n          });\n          setPersons(persons.map(person => person.id !== changedPerson.id ? person : returnedPerson))\n        })\n        .catch(error => {\n          showNotification({\n            message: `Information of ${changedPerson.name} has already been removed from server`,\n            type: 'error'\n          });\n          setPersons(persons.filter(p => p.id !== changedPerson.id))\n        });\n    }\n  }\n\n  const deletePerson = (person) => {\n    if (window.confirm(`Delete ${person.name} ?`)) {\n      personService\n      .deleteOne(person.id)\n      .then(response => {\n        showNotification({\n          message: `Deleted ${person.name}`,\n          type: 'success'\n        });\n        setPersons(persons.filter(p => p.id !== person.id));\n      });\n    }\n  }\n\n  const showNotification = (notification) => {\n    setNotification(notification);\n    setNewName('');\n    setNewNumber('');\n    setTimeout(() => {\n      setNotification(null)\n    }, 2000)\n  }\n\n  const handleNameChange = (event) => {\n    setNewName(event.target.value);\n  }\n\n  const handleNumberChange = (event) => {\n    setNewNumber(event.target.value);\n  }\n\n  const handleSearchChange = (event) => {\n    setSearchName(event.target.value);\n  }\n  \n  const filterPersons = (person) => {\n    return person.name.toLowerCase().includes(searchName.toLowerCase());\n  }\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <Notification notification={notification} />\n      <Filter searchName={searchName} handleSearchChange={handleSearchChange} />\n      <h2>add a new</h2>\n      <PersonForm\n        addPerson={addPerson}\n        newName={newName}\n        newNumber={newNumber}\n        handleNameChange={handleNameChange}\n        handleNumberChange={handleNumberChange}/>\n      <h2>Numbers</h2>\n      <Persons \n        persons={persons.filter(filterPersons)}\n        searchName={searchName}\n        deletePerson={deletePerson}/>\n    </div>\n  )\n}\n\nexport default App","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}